{"version":3,"sources":["Loader/Loader.js","Button/Button.js","SelectionPanel/SelectionPanel.js","ResultsPanel/ResultsPanel.js","RandomInvestigator/RandomInvestigator.js","App.js","index.js"],"names":["Loader","color","size","speed","Button","props","className","id","value","onClick","click","children","SelectionPanel","buttons","map","number","key","e","handleQuantitySelection","handleRandomize","ResultsPanel","randomized_investigators","loading","investigators","length","randomized","i","random_idx","index","investigator","href","url","target","src","baseUrl","imagesrc","RandomInvestigator","selected","document","querySelectorAll","classList","remove","add","setState","chosen","randomArray","random_index","state","Math","floor","random","includes","push","resultsPanel","this","Component","App","getInvestigators","fetch","then","res","json","result","filter","card","type_code","final_cards","loaded","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1dd5e7c.chunk.js","sourcesContent":["import React from 'react';\nimport { WindMillLoading } from 'react-loadingg';\n\nconst Loader = () => {\n  return (\n    <WindMillLoading color=\"#5d00ff\" size=\"large\" speed=\"1.5\" />\n  );\n}\n\nexport default Loader;","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      className={props.className}\n      id={props.id}\n      value={props.value}\n      onClick={props.click}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport Button from '../Button/Button';\n\nimport './SelectionPanel.css';\n\nconst SelectionPanel = (props) => {\n\n  // Map buttons for number of players (max 4 players in Arkham Horror: LCG)\n  let buttons = [1, 2, 3, 4].map(number => (\n    <Button\n      key={number}\n      className=\"selection\"\n      value={number}\n      click={(e) => props.handleQuantitySelection(e,number)}\n    >\n      {number}\n    </Button>\n  ));\n\n  return (\n    <div className=\"SelectionPanel\">\n       <div className=\"quantitySelector\">\n          <p>Choose how many investigators you want to play with:</p>\n          {buttons}\n          <div className=\"randomize\">\n            <Button className=\"getRandom\" value=\"getRandom\" click={props.handleRandomize}>Randomize Investigators</Button>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default SelectionPanel;","import React from 'react';\nimport './ResultsPanel.css';\n\nconst ResultsPanel = (props) => {\n\n  let randomized_investigators = [];\n    \n    // Build randomized_investigators array to display on page\n    // Only shown if \n        // 1) not loading, \n        // 2) investigator data is present, and \n        // 3) Randomize Investigators button has been clicked\n    if (!props.loading && props.investigators.length && props.randomized.length) {\n      for (let i=0; i < props.randomized.length; i++) {\n        randomized_investigators = props.randomized.map((random_idx, index) => {\n          let investigator = props.investigators[random_idx];\n          return (\n            <div key={index} className=\"investigator\">\n              <a className=\"investigator_link\" href={investigator.url} target=\"_blank\">\n              <img key={index} className=\"investigator_card\" id={`investigator_${index + 1}`} src={props.baseUrl + investigator.imagesrc} />\n              </a>\n            </div>\n          );\n        });\n      }\n    }\n  return (\n    <div className=\"ResultsPanel\">\n      {randomized_investigators}\n   </div>\n  );\n};\n\nexport default ResultsPanel;","import React, {Component} from 'react';\nimport SelectionPanel from '../SelectionPanel/SelectionPanel';\nimport ResultsPanel from '../ResultsPanel/ResultsPanel';\nimport './RandomInvestigator.css';\n\nclass RandomInvestigator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      baseUrl: 'https://arkhamdb.com',\n      chosen: 0,\n      randomized: []\n    }\n  };\n\n  // Click handler to select number of investigators to play with\n  handleQuantitySelection = (e,number) => {\n    let selected = document.querySelectorAll('.selected');\n    for (let i=0; i < selected.length; i++) {\n      selected[i].classList.remove('selected');\n    }\n    e.target.classList.add('selected');\n    this.setState({\n      chosen: number\n    });\n  }\n\n  // Click handler to perform randomize logic and display randomized investigators\n  handleRandomize = () => {\n    if (this.props.investigators) {\n      let randomArray = [];\n      let random_index = null;\n      while (randomArray.length < this.state.chosen) {\n        random_index = Math.floor(Math.random() * (this.props.investigators.length - 1));\n        if (!randomArray.includes(random_index)) {\n          randomArray.push(random_index);\n        }\n      }\n\n      this.setState({\n        randomized: randomArray\n      });\n    }\n  }\n\n  render() {\n\n    let resultsPanel = this.props.investigators.length ? \n      (<ResultsPanel \n        investigators={this.props.investigators}\n        randomized={this.state.randomized}\n        baseUrl={this.state.baseUrl}\n      />  ) : \n      null;\n\n    return (\n      <div className=\"RandomInvestigator\">\n        <h1>Get Random Investigators</h1>\n        <SelectionPanel handleRandomize={this.handleRandomize} handleQuantitySelection={this.handleQuantitySelection} />\n        {resultsPanel}\n      </div>\n    );\n  }\n}\n\nexport default RandomInvestigator;\n","import React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport RandomInvestigator from './RandomInvestigator/RandomInvestigator';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      investigators: [],\n      loading: true,\n      loaded: false\n    }\n  }\n\n  componentDidMount () {\n    this.getInvestigators();\n  }\n\n  // API call to load data from ArkhamDB.com\n  // Function is called in componentDidMount()\n  getInvestigators =() => {\n    this.setState({\n      loading: true\n    });\n    fetch('https://arkhamdb.com/api/public/cards/')\n      .then(res => res.json())\n      .then(result => result.filter(card => {\n        return card.type_code === 'investigator';\n      }))\n      .then(investigators => investigators.filter((investigator, index) => {\n        let removable_indices = [33, 39, 40, 41];\n        if (!removable_indices.includes(index)) {\n          return investigator;\n        }\n      }))\n      .then(final_cards => this.setState({\n        ...this.state,\n        investigators: final_cards,\n        loading: false,\n          loaded: true\n      }));\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        {\n          this.state.loaded && this.state.investigators.length ? \n          <RandomInvestigator investigators={this.state.investigators} loading={this.state.loading} /> :\n          <Loader />\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}